trigger:
  - master

pr:
  - master

pool:
  vmImage: 'windows-2019'

variables:
  BotGroup: 'TestSlackBot-Group-CI-Build'
  BotName: 'TestSlackBot-Echo-CI-Build'
  BuildConfiguration: 'debug'
  BuildPlatform: 'any cpu'

steps:
- task: UseDotNet@2
  displayName: 'Use .Net Core sdk 2.1.x'
  inputs:
    version: 2.1.x

- task: UseDotNet@2
  displayName: 'Use .Net Core sdk 3.0.x'
  inputs:
    version: 3.0.x

- task: NuGetToolInstaller@0
  displayName: 'Use NuGet 4.9.1'
  inputs:
    versionSpec: 4.9.1

- task: NuGetCommand@2
  displayName: 'NuGet restore'
  inputs:
    restoreSolution: '$(System.DefaultWorkingDirectory)\Microsoft.Bot.Builder.sln'

- task: VSBuild@1
  displayName: 'Build solution Microsoft.Bot.Builder.sln'
  inputs:
    solution: Microsoft.Bot.Builder.sln
    vsVersion: 16.0
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Dotnet Publish TestBot'
  inputs:
    command: publish
    publishWebProjects: false
    projects: '$(System.DefaultWorkingDirectory)\tests\Adapters\Microsoft.Bot.Builder.Adapters.Slack.TestBot\Microsoft.Bot.Builder.Adapters.Slack.TestBot.csproj'
    arguments: '--output $(System.DefaultWorkingDirectory)\tests\Adapters\Microsoft.Bot.Builder.Adapters.Slack.TestBot\PublishedBot --framework netcoreapp2.1'
    modifyOutputPath: false

- task: AzureCLI@1
  displayName: 'Create Resources'
  inputs:
    azureSubscription: '$(AzureSubscription)'
    scriptLocation: inlineScript
    inlineScript: |
     call az deployment create --name "$(BotGroup)" --template-file "$(System.DefaultWorkingDirectory)\tests\Adapters\Microsoft.Bot.Builder.Adapters.Slack.TestBot\DeploymentTemplates\template-with-new-rg.json" --location "westus" --parameters appId=$(AppId) appSecret="$(AppSecret)" botId="$(BotName)" botSku=F0 newAppServicePlanName="$(BotName)" newWebAppName="$(BotName)" groupName="$(BotGroup)" groupLocation="westus" newAppServicePlanLocation="westus" slackVerificationToken="$(SlackVerificationToken)" slackBotToken="$(SlackBotToken)"  slackClientSigningSecret="$(SlackClientSigningSecret)"
     call az webapp deployment source config-zip --resource-group "$(BotGroup)" --name "$(BotName)" --src "$(System.DefaultWorkingDirectory)\tests\Adapters\Microsoft.Bot.Builder.Adapters.Slack.TestBot\PublishedBot\PublishedBot.zip"

- powershell: |
   echo '##vso[task.setvariable variable=SLACK_CHANNEL]$(SlackChannel)'
   echo '##vso[task.setvariable variable=SLACK_BOT_TOKEN]$(SlackBotToken)'
   echo '##vso[task.setvariable variable=TESTAPPID]$(AppId)'
   echo '##vso[task.setvariable variable=TESTPASSWORD]$(AppSecret)'
  displayName: 'Set Environment Variables'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    command: test
    projects: |
     FunctionalTests\Microsoft.Bot.Builder.FunctionalTests\Microsoft.Bot.Builder.FunctionalTests.csproj
    arguments: '-v n --configuration $(BuildConfiguration) --no-build --no-restore --filter SlackClientTest'
    workingDirectory: tests

- task: AzureCLI@1
  displayName: 'Delete Resources'
  inputs:
    azureSubscription: '$(AzureSubscription)'
    scriptLocation: inlineScript
    inlineScript: 'call az group delete -n "$(BotGroup)" --yes'
  condition: always()
